{"version":3,"sources":["question.js"],"names":["Category","name","questionsCount","Question","callback","Error","file","extension","extname","filename","basename","dir","dirname","m","getType","split","q","BlindQuestion","DeafQuestion","category","type","regex","infos","match","trim","author","year","console","log","album","parser","createReadStream","err","metadata","duration"],"mappings":"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","file":"question.js","sourcesContent":["'use strict';\n\nimport path from 'path';\nimport mime from 'mime';\n\n// Mp3\nimport mm from 'musicmetadata';\nimport fs from 'fs';\nimport mp3Duration from 'mp3-duration';\n\nexport class Category {\n\t//name: string;\n\t//questionsCount: number;\n\tconstructor(name) {\n\t\tthis.name = name;\n\t\tthis.questionsCount = 0;\n\t}\n}\n\nexport class Question {\n\t//file: string;\n\t//name: string;\n\t//author: string;\n\t//year: string;\n\t//type: string;\n\t//category: string;\n\t\n\tconstructor() {\n\t}\n\n\tstatic fromFile(file)/*: Question*/ {\n\t\tvar extension = path.extname(file);\n\t\tvar filename = path.basename(file, extension);\n\t\tvar dir = path.basename(path.dirname(file));\n\n\t\t//var regex = /^(\\d+)\\.\\s*(.*?)\\s*--\\s*(.*?)(?:\\s*\\((\\d+)\\))?$/i\n\t\t//var infos:Array<any> = filename.match(regex);\n\t\t\n\t\t//var infos:Array<string> = filename.split('--');\n\t\tvar m = mime.getType(file).split('/');\n\n\t\tvar q;\n\t\tif (m[0] == 'audio') {\n\t\t\tq = new BlindQuestion();\n\t\t} else {\n\t\t\tq = new DeafQuestion();\n\t\t}\n\n\t\tq.file = file;\n\t\tq.category = dir;\n\n\t\treturn q;\n\t}\n\n\tloadInformations(callback) {\n\t\tthrow new Error(\"you have to implement loadInformations method\")\n\t}\n}\n\nexport class DeafQuestion extends Question {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.type = 'deaf';\n\t}\n\n\tloadInformations(callback) {\n\t\tvar extension = path.extname(this.file);\n\t\tvar filename = path.basename(this.file, extension);\n\n\t\tvar regex = /^(\\d+)\\.\\s*(.*?)\\s*--\\s*(.*?)(?:\\s*\\((\\d+)\\))?$/i\n\t\tvar infos= filename.match(regex);\n\t\t\n\t\tthis.name = infos[3].trim();\n\t\tthis.author = infos[2].trim();\n\t\tthis.year = (infos[4]) ? infos[4].trim() : '';\n\t}\n}\n\nexport class BlindQuestion extends Question {\n\t//duration: number\n\t//album: string\n\tconstructor() {\n\t\tsuper();\n\t\tthis.type = 'blind';\n\t}\n\n\tloadInformations(callback) {\n\t\tvar extension = path.extname(this.file);\n\t\tvar filename = path.basename(this.file, extension);\n\n\t\t\t\t//   (NÂ°). (author) -- (music) -- (album)? (year)?\n\t\tvar regex = /^(\\d+)\\.\\s*(.*?)\\s*--\\s*(.*?)(?:\\s*--\\s*(.*?))?(?:\\s*\\((\\d+)\\))?$/i\n\t\tvar infos = filename.match(regex);\n\n\t\tconsole.log(filename, infos)\n\t\t\n\t\tthis.author = infos[2].trim();\n\t\tthis.name = infos[3].trim();\n\t\tthis.album = (infos[4]) ? infos[4].trim() : '';\n\t\tthis.year = (infos[5]) ? infos[5].trim() : '';\n\n\t\tvar parser = mm(fs.createReadStream(this.file), (err, metadata) => {\n\t\t\tif (err) {\n\t\t\t\tthrow filename+\":\"+err;\n\t\t\t}\n\t\t\tmp3Duration(this.file, (err, duration) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\n\t\t\t\tthis.duration = metadata.duration;\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\t\n\t} \n}\n"]}