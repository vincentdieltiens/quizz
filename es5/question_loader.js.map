{"version":3,"sources":["question_loader.js"],"names":["QuestionList","mode","questions","index","question","push","shuffle","sort","a","b","category","localeCompare","length","map","add","callback","forEach","QuestionLoader","directory","err","files","file","f","lstatSync","isFile","basename","q","fromFile","reorder","array","counter","Math","floor","random","temp"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;IAIaA,Y,WAAAA,Y;AACZ;AACA;AACA;;AAEA,uBAAYC,IAAZ,EAAkB;AAAA;;AACjB,OAAKA,IAAL,GAAYA,IAAZ;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,KAAL,GAAa,CAAb;AACA;;;;sBAEGC,Q,EAAU;AACb,QAAKF,SAAL,CAAeG,IAAf,CAAoBD,QAApB;AACA;;;4BAES;AACT,OAAI,KAAKH,IAAL,IAAa,QAAjB,EAA2B;AAC1B,SAAKC,SAAL,GAAiBI,QAAQ,KAAKJ,SAAb,CAAjB;AACA,IAFD,MAEO;AACN,SAAKA,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC9C,YAAOD,EAAEE,QAAF,CAAWC,aAAX,CAAyBF,EAAEC,QAA3B,CAAP;AACA,KAFgB,CAAjB;AAGA;AACD;;;sBAEGP,K,EAAO;AACV,UAAO,KAAKD,SAAL,CAAeC,KAAf,CAAP;AACA;;;yBAEM;AACN,QAAKA,KAAL;AACA,UAAO,KAAKD,SAAL,CAAe,KAAKC,KAApB,CAAP;AACA;;;2BAEQ;AACR,UAAO,KAAKD,SAAL,CAAeU,MAAtB;AACA;;;wBAEK;AACL,UAAO,KAAKV,SAAZ;AACA;;;4BAESA,S,EAAW;AAAA;;AACpBA,aAAUW,GAAV,CAAc,UAACT,QAAD,EAAc;AAC3B,UAAKU,GAAL,CAASV,QAAT;AACA,IAFD;AAGA;;;sBAEGW,Q,EAAU;AACb,QAAKb,SAAL,CAAec,OAAf,CAAuBD,QAAvB;AACA;;;;;;IAGWE,c,WAAAA,c;;AAEZ;;AAEA,2BAAc;AAAA;;AACb,OAAKf,SAAL,GAAiB,IAAjB;AACA;;;;uBAEIgB,S,EAAWjB,I,EAAMc,Q,EAAU;AAAA;;AAC/B,QAAKb,SAAL,GAAiB,IAAIF,YAAJ,CAAiBC,IAAjB,CAAjB;;AAEA,uBAAKiB,YAAU,OAAf,EAAwB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACvCA,UAAMJ,OAAN,CAAc,UAACK,IAAD,EAAU;AACvB,SAAIC,IAAI,aAAGC,SAAH,CAAaF,IAAb,CAAR;AACA,SAAIC,EAAEE,MAAF,MAAc,eAAKC,QAAL,CAAcJ,IAAd,KAAuB,WAAzC,EAAsD;AACrD,UAAIK,IAAI,mBAASC,QAAT,CAAkBN,IAAlB,CAAR;;AAEA,aAAKnB,SAAL,CAAeY,GAAf,CAAmBY,CAAnB;AACA;;AAED,YAAKxB,SAAL,CAAe0B,OAAf;AACA,KATD;AAUAb,aAAS,OAAKb,SAAd;AACA,IAZD;AAaA;;;;;;AAGF,SAASI,OAAT,CAAiBuB,KAAjB,EAAwB;AACvB,KAAIC,UAAUD,MAAMjB,MAApB;;AAEA;AACA,QAAOkB,UAAU,CAAjB,EAAoB;AACnB;AACA,MAAI3B,QAAQ4B,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBH,OAA3B,CAAZ;;AAEA;AACAA;;AAEA;AACA,MAAII,OAAOL,MAAMC,OAAN,CAAX;AACAD,QAAMC,OAAN,IAAiBD,MAAM1B,KAAN,CAAjB;AACA0B,QAAM1B,KAAN,IAAe+B,IAAf;AACA;;AAED,QAAOL,KAAP;AACA","file":"question_loader.js","sourcesContent":["'use strict';\n\nimport glob from 'glob';\nimport fs from 'fs';\nimport path from 'path';\nimport { Question, Category } from './question';\n\n/*export interface QuestionList {\n\t[name: string]: Array<Question>;\n}*/\n\nexport class QuestionList {\n\t//mode: string;\n\t//questions: Array<Question>;\n\t//index: number;\n\t\t\n\tconstructor(mode) {\n\t\tthis.mode = mode;\n\t\tthis.questions = [];\n\t\tthis.index = 0;\n\t}\n\t\n\tadd(question) {\n\t\tthis.questions.push(question);\t\n\t}\n\t\n\treorder() {\n\t\tif (this.mode == 'random') {\n\t\t\tthis.questions = shuffle(this.questions);\n\t\t} else {\n\t\t\tthis.questions = this.questions.sort((a, b) => {\n\t\t\t\treturn a.category.localeCompare(b.category);\n\t\t\t});\n\t\t}\n\t}\n\n\tget(index) {\n\t\treturn this.questions[index];\n\t}\n\t\n\tnext() {\n\t\tthis.index++;\n\t\treturn this.questions[this.index]; \n\t}\n\n\tlength() {\n\t\treturn this.questions.length;\n\t}\n\n\tall() {\n\t\treturn this.questions;\n\t}\n\n\tfromArray(questions) {\n\t\tquestions.map((question) => {\n\t\t\tthis.add(question)\n\t\t})\n\t}\n\n\tmap(callback) {\n\t\tthis.questions.forEach(callback);\n\t}\n}\n\nexport class QuestionLoader {\n\n\t//questions: QuestionList;\n\n\tconstructor() {\n\t\tthis.questions = null;\n\t}\n\n\tload(directory, mode, callback) {\n\t\tthis.questions = new QuestionList(mode);\n\n\t\tglob(directory+\"/**/*\", (err, files) => {\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tvar f = fs.lstatSync(file);\n\t\t\t\tif (f.isFile() && path.basename(file) != 'game.json') {\n\t\t\t\t\tvar q = Question.fromFile(file);\n\n\t\t\t\t\tthis.questions.add(q);\n\t\t\t\t}\n\n\t\t\t\tthis.questions.reorder();\n\t\t\t});\n\t\t\tcallback(this.questions);\n\t\t});\n\t}\n}\n\nfunction shuffle(array) {\n\tlet counter = array.length;\n\n\t// While there are elements in the array\n\twhile (counter > 0) {\n\t\t// Pick a random index\n\t\tlet index = Math.floor(Math.random() * counter);\n\n\t\t// Decrease counter by 1\n\t\tcounter--;\n\n\t\t// And swap the last element with it\n\t\tlet temp = array[counter];\n\t\tarray[counter] = array[index];\n\t\tarray[index] = temp;\n\t}\n\n\treturn array;\n}\n"]}