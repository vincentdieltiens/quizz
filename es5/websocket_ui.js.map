{"version":3,"sources":["websocket_ui.js"],"names":["ws","WebsocketUI","port","eventListeners","createServer","conn","on","str","data","JSON","parse","console","log","receive","code","reason","triggerEvent","listen","addEventListener","register","bind","setMode","setModeOK","updateTeamName","startQuestions","startQuestion","addPoints","continueQuestion","finishGame","error","event","callback","push","index","indexOf","splice","value","forEach","f","property","hasOwnProperty","send","stringify","game","devices","teams","team","screen","mode","questions","startQuestionIndex","questionIndex","state","answered","correct","setTeamsActivation","name","points","setPoints"],"mappings":"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","file":"websocket_ui.js","sourcesContent":["'use strict';\n\nimport * as ws from 'nodejs-websocket'\nimport { Game } from './game'\nimport { Question } from './question'\n\nexport class WebsocketUI {\n\t//ws: ws.Server\n\t//conn: ws.Connection\n\t//eventListeners: {}\n\t//game: Game\n\n\tconstructor(port) {\n\t\tthis.eventListeners = { 'ready': [], 'leave': [] };\n\n\t\tthis.ws = ws.createServer((conn) => {\n\t\t\tthis.conn = conn\n\n\t\t\tconn.on(\"text\", (str) => {\n\t\t\t\tvar data = JSON.parse(str)\n\t\t\t\tconsole.log('receive ', data)\n\t\t\t\tthis.receive(data)\n\t\t\t})\n\n\t\t\tconn.on(\"close\", (code, reason) => {\n\t\t\t\tthis.conn = null\n\t\t\t\tthis.triggerEvent('leave', {})\n\t\t\t})\n\n\t\t\tconn.on(\"error\", () => {\n\t\t\t\tthis.triggerEvent('error', {})\n\t\t\t})\n\n\t\t}).listen(port);\n\n\t\tthis.addEventListener('register', this.register.bind(this))\n\t\tthis.addEventListener('mode', this.setMode.bind(this))\n\t\tthis.addEventListener('mode_ok', this.setModeOK.bind(this))\n\t\tthis.addEventListener('team_name', this.updateTeamName.bind(this))\n\t\tthis.addEventListener('start_questions', this.startQuestions.bind(this))\n\t\tthis.addEventListener('start_question', this.startQuestion.bind(this))\n\t\tthis.addEventListener('points', this.addPoints.bind(this))\n\t\tthis.addEventListener('continue_question', this.continueQuestion.bind(this))\n\t\tthis.addEventListener('finish_game', this.finishGame.bind(this))\n\t\tthis.addEventListener('error', this.error.bind(this))\n\t}\n\n\taddEventListener(event, callback) {\n\t\tif (!(event in this.eventListeners)) {\n\t\t\tthis.eventListeners[event] = []\n\t\t}\n\t\tthis.eventListeners[event].push(callback)\n\t}\n\n\tremoveEventListener(event, callback) {\n\t\tvar index = this.eventListeners[event].indexOf(callback)\n\t\tthis.eventListeners[event].splice(index, 1)\n\t}\n\n\ttriggerEvent(event, value) {\n\t\tif (event in this.eventListeners) {\n\t\t\tthis.eventListeners[event].forEach((f) => {\n\t\t\t\tf(value)\n\t\t\t})\n\t\t}\n\t}\n\n\treceive(data) {\n\t\tfor(var property in data) {\n\t\t\tif (data.hasOwnProperty(property)) {\n\t\t\t\tthis.triggerEvent(property, data[property])\n\t\t\t}\n\t\t}\n\t}\n\n\tsend(event, value) {\n\t\tvar data = {}\n\t\tdata[event] = value\n\t\tthis.conn.send(JSON.stringify(data))\n\t}\n\n\t/**\n\t *\n\t */\n\tsetGame(game) {\n\t\tthis.game = game;\n\t}\n\n\tsendDevices(devices) {\n\t\tthis.send('devices', devices)\n\t}\n\n\tsendTeams(teams) {\n\t\tthis.send('teams', teams)\n\t}\n\n\tsendUpdateTeam(team) {\n\t\tthis.send('team', team)\n\t}\n\n\tsendScreen(screen) {\n\t\tthis.send('screen', screen)\n\t}\n\n\tsendPlayMode(mode) {\n\t\tthis.send('mode', mode)\n\t}\n\n\tsendQuestions(questions, startQuestionIndex=-1) {\n\t\tthis.send('questions', {\n\t\t\tquestions: questions,\n\t\t\tstartQuestionIndex: startQuestionIndex\n\t\t})\n\t}\n\n\tsendPlayQuestion(questionIndex, state) {\n\t\tthis.send('play_question', {\n\t\t\t'questionIndex': questionIndex,\n\t\t\t'state': state\n\t\t})\n\t}\n\n\tsendAnswered(questionIndex, answered) {\n\t\tthis.send('answered', {\n\t\t\t'questionIndex': questionIndex,\n\t\t\t'answer': answered\n\t\t})\n\t}\n\n\tsendAnswer(questionIndex, correct) {\n\t\tthis.send('answer', {\n\t\t\t'questionIndex': questionIndex,\n\t\t\t'correct': correct\n\t\t})\n\t}\n\n\t/**\n\t *\n\t */\n\tregister() {\n\t\tthis.eventListeners['ready'].forEach((f) => {\n\t\t\tf();\n\t\t});\n\t}\n\n\tsetMode(mode) {\n\t\tthis.game.setMode(mode, true)\n\t}\n\n\tsetModeOK() {\n\t\tthis.game.setTeamsActivation()\n\t}\n\n\tupdateTeamName(data) {\n\t\tthis.game.updateTeamName(data.index, data.name)\n\t}\n\n\tstartQuestions() {\n\t\tthis.game.startQuestions()\n\t}\n\n\tstartQuestion(index) {\n\t\tthis.game.startQuestion(index);\n\t}\n\n\taddPoints(points) {\n\t\tthis.game.setPoints(points)\n\t}\n\n\tcontinueQuestion() {\n\t\tthis.game.continueQuestion();\n\t}\n\n\terror() {\n\n\t}\n\n\tfinishGame() {\n\t\tthis.game.finishGame()\n\t}\n\n}"]}